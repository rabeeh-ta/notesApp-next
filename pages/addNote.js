import Head from 'next/head';
import Link from 'next/link';
import Style from '../styles/card.module.css';

import { Karla } from 'next/font/google';
import { useState } from 'react';
import axios from 'axios';
import { useRouter } from 'next/router';
import { authOptions } from './api/auth/[...nextauth]';
import { getServerSession } from 'next-auth/next';

const karla = Karla({
  weight: '700',
  subsets: ['latin'],
});

export default function AddNote({ session }) {
  console.log(session);
  const router = useRouter();

  const [note, setNote] = useState({ title: '', author: '', content: '' });

  function noteChangeHandler(name, value) {
    setNote((oldValue) => {
      return {
        ...oldValue,
        [name]: value,
      };
    });
    console.log(note);
  }

  function saveNote(e) {
    e.preventDefault();
    console.log(note);
    axios
      .post('/api/postNote', note)
      .then(function (response) {
        console.log(response);
        router.push('/');
      })
      .catch(function (error) {
        console.log(error);
      });
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <nav className={Style.navbar}>
        <h1 className={Style.mainHeading}>üìùYour Notes</h1>
        <button className={Style.button}>
          <Link href="/">Go Back</Link>
        </button>
      </nav>
      <main className={[karla.className, Style.container].join(' ')}>
        <div className={Style.container}>
          <form
            className={Style.inputFormDiv}
            onSubmit={(e) => {
              e.preventDefault();
            }}
          >
            <label>
              Note Title:{' '}
              <input
                className={Style.inputElement}
                name="title"
                value={note.title}
                onChange={(e) =>
                  noteChangeHandler(e.target.name, e.target.value)
                }
              />
            </label>
            <br />

            <label>
              Note Autor:{' '}
              <input
                className={Style.inputElement}
                name="author"
                value={note.author}
                onChange={(e) =>
                  noteChangeHandler(e.target.name, e.target.value)
                }
              />
            </label>
            <br />

            <label>
              Note Content:{' '}
              <textarea
                className={Style.inputElement}
                rows="10"
                name="content"
                value={note.content}
                onChange={(e) =>
                  noteChangeHandler(e.target.name, e.target.value)
                }
              />
            </label>
            <br />
            <button className={Style.button} onClick={(e) => saveNote(e)}>
              save
            </button>
          </form>
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps(context) {
  const session = await getServerSession(context.req, context.res, authOptions);

  if (!session) {
    return {
      redirect: {
        destination: '/auth/login',
        permanent: false,
      },
    };
  }

  return {
    props: {
      session,
    },
  };
}
